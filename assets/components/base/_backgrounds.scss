/** @section Backgrounds*/
// Mixins
@mixin bg-variant($parent, $color) {
	#{$parent} {
		background-color: $color;
	}
	a#{$parent},
	button#{$parent} {
		@include hover-focus {
			background-color: darken($color, 10%);
		}
	}
}

@mixin bg-gradient-variant($parent, $color) {
	#{$parent} {
		background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x;
	}
}

@mixin bg-adjacent() {
	&:not([style*='background-']) + &:not([style*='background-']) {
		padding-top: 0;
	}
}

// Bootstrap styles
@each $color, $value in $theme-colors {
	@include bg-variant(".bg-#{$color}", $value);
}

@if $enable-gradients {
	@each $color, $value in $theme-colors {
		@include bg-gradient-variant(".bg-gradient-#{$color}", $value);
	}
}

.bg-white {
	background-color: $white;
}

// Theme color light backgrounds
@each $color, $value in $theme-colors {
	.bg-#{$color}-light {
		background: adjust-color( $value, $hue: 1deg, $saturation: 39%, $lightness: 45% );
	}

	.bg-#{$color} {
		@include bg-adjacent();
	}
}


// Gray backgrounds
@each $color, $value in $grays {
	@include bg-variant(".bg-#{$color}", $value);

	.bg-#{$color} {
		@include bg-adjacent();
	}
}


// Transparent background
.bg-transparent {
	background-color: transparent;
	@include bg-adjacent();
}

// Background layer
.bg-layer {
	position: relative;
	z-index: 0;
}

.bg-layer-item {
	position: absolute;
	left: 0;
	top: 0;
	right: 0;
	z-index: -1;
}


// Image background
.bg-image {
	background-position: center center;
	background-size: cover;
}

.bg-image-wrap {
	position: relative;
}

.bg-image-wrap-item {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 60%;
	display: none;
}


// Media
@include media-breakpoint-up( lg ) {
	.bg-image-wrap-item {
		display: block;
	}
}

@include media-breakpoint-up( xxl ) {
	.bg-image-wrap-item {
		left: 55%;
	}
}